@using X.PagedList
@using X.PagedList.Mvc.Core

@model IPagedList<Article>

@{
	ViewData["Title"] = "Հրապարակումներ";
}

<h2 class="text-center mt-5 mb-5">@ViewData["Title"]</h2>


<div class="container">
	<div class="row">
		<div class="col-lg-9">

			<div class="row">
				@if (Model != null && Model.Count > 1)
				{
					@foreach (var article in Model)
					{
						<div class="col-md-4">
							<div class="card mb-4 product-wap rounded-0">
								<div class="card rounded-0">
									<img class="card-img rounded-0 img-fluid" src="~/@article.ImageUrl">
								</div>
								<div class="card-body">
									<a asp-controller="Article" asp-action="Details" asp-route-slug="@article.Slug" class="h3 text-decoration-none">@article.Title</a>
									<ul class="w-100 list-unstyled d-flex justify-content-between mb-0">
										<li class="w-100 text-right font-italic">@article.Author</li>
									</ul>
								</div>
							</div>
						</div>
					}
				}
			</div>
			<div div="row">
				@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new
		   {
			   page = page,
			   searchfor = @Context.Request.Query["searchfor"],
			   searchby = @Context.Request.Query["searchby"]
		   }),
					new X.PagedList.Web.Common.PagedListRenderOptions
					{
						UlElementClasses = new[] { "pagination", "justify-content-center", "mt-3" },
						LiElementClasses = new string[] { "page-item" },
						PageClasses = new string[] { "page-link" },
						MaximumPageNumbersToDisplay = 5,
						LinkToNextPageFormat = "Հաջորդ",
						LinkToPreviousPageFormat = "Նախորդ"
					})
			</div>
		</div>
	</div>
</div>